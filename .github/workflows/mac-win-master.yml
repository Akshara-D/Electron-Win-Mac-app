name: CICD
on:
  push:
    branches: [ "master" ]

jobs:
  build_on_mac:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.1
      - name: Install npm electron
        run: |
          npm install --save-dev @electron-forge/cli
          npx electron-forge import
          
      - name: Create distributable package
        run: npm run make
        
      - name: Electron App Code signing Action
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
           github_token: '${{ secrets.GH_TOKEN }}'
           mac_certs:  ${{ secrets.MAC_CERTS }} # Base64-encoded code signing certificate for macOS
           mac_certs_password:  ${{ secrets.MAC_PWD }}
           package_root: out/my-electron-app-darwin-x64/my-electron-app.app/Contents/MacOS/
          
      - name: Xcode notarizer
        uses: love-actions/xcode-notarizer@v1.0.2
        with:
         product-path: out/my-electron-app-darwin-x64/my-electron-app.app/Contents/MacOS/
         apple-id: '${{ secrets.APPLE_ID }}'
         app-password: '${{ secrets.APPLE_PWD }}'
         team-id: '${{ secrets.APPLE_TEAM_ID }}' 
         staple: is true
    
      - name: Upload app artifact for deployment
        uses: actions/upload-artifact@v2
        with:
          name: mac-app
          path: out/my-electron-app-darwin-x64/my-electron-app.app/Contents/MacOS/
          
  build_on_wind:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.1
      - name: Install npm electron
        run: |
          npm install --save-dev @electron-forge/cli
          npx electron-forge import
          
      - name: Create distributable package
        run: npm run make
      
      - name: Code sign windows file
        uses: dlemstra/code-sign-action@v1
        with:
          certificate: '${{ secrets.CERTIFICATE }}'
          password: '${{ secrets.CERTIFICATE_PASSWORD }}' 
          folder: out\my-electron-app-win32-x64
          recursive: true 
        
      - name: Package Release App
        uses: actions/upload-artifact@v2
        with:
          name: win-app
          path: out\my-electron-app-win32-x64



